math.sub <- select(math, ï..student_id=school_student_id, ScaleScore, AchievementLevel, Percentile, LexileQuantile)
math.sub <- select(math, school_student_id=ï..student_id, ScaleScore, AchievementLevel, Percentile, LexileQuantile)
names(math.sub)
?join
fall <- inner_join(ncfe, math.sub)
names(fall)
head(fall$AchievementLevel)
fall$normed <- fall$ConvertedScore / fall$PredictedPercentile
head(fall$normed)
qplot(fall, PredictedPercentile, ConvertedScore)
qplot(fall, PredictedPercentile ~ ConvertedScore)
qplot(PredictedPercentile, ConvertedScore, data=fall)
qplot(PredictedPercentile, ConvertedScore, data=fall, color=TeacherName)
qplot(PredictedPercentile, ConvertedScore, data=fall, pch=20, color=TeacherName)
qplot(PredictedPercentile, ConvertedScore, data=fall, color=TeacherName)
?qplot
qplot(ConvertedScore, data=fall, geom="boxplot")
qplot(ConvertedScore, TeacherNamedata=fall, geom="boxplot")
qplot(ConvertedScore, TeacherName, data=fall, geom="boxplot")
qplot(TeacherName, ConvertedScore, data=fall, geom="boxplot")
View(fall)
qplot(TeacherName, ConvertedScore, data=ncfe, geom="boxplot")
ncfe$normed <- ncfe$ConvertedScore / ncfe$PredictedPercentile
qplot(TeacherName, ConvertedScore, data=ncfe, geom="boxplot") + abline(h=70)
qplot(TeacherName, ConvertedScore, data=ncfe, geom="boxplot") + abline(70, 0)
qplot(TeacherName, ConvertedScore, data=ncfe, geom="boxplot") + abline(0, 70)
?abline
ggplot(data, aes(TeacherName, ConvertedScore) + geom_boxplot() + abline(h=70)
ggplot(data, aes(TeacherName, ConvertedScore)) + geom_boxplot() + abline(h=70)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + abline(h=70)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_abline(h=70)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(70)
?geom_hline
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70, color='red', alpha=0.8)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70, color='red', alpha=0.6)
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot(color="steelblue") + geom_hline(yintercept=70, color='red')
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70, color='red')
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70, color='red') + lab(x="Teacher", y="Scaled Score") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, ConvertedScore)) + geom_boxplot() + geom_hline(yintercept=70, color='red') + labs(x="Teacher", y="Scaled Score") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, normed)) + geom_boxplot() + geom_hline(yintercept=70, color='red') + labs(x="Teacher", y="Scaled Score") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log(normed)) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="Scaled Score / Predicted Percentile") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log(normed))) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="Scaled Score / Predicted Percentile") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log10(normed))) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="Scaled Score / Predicted Percentile") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="Scaled Score / Predicted Percentile") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="log2(Scaled Score / Predicted Percentile)") + ggtitle("Distrubtions on NCFE Fall 1014")
ncfe$difference <- ncfe$ConvertedScore - ncfe$PredictedPercentile
ggplot(ncfe, aes(TeacherName, difference) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="log2(Scaled Score / Predicted Percentile)") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, difference)) + geom_boxplot() + geom_hline(yintercept=0, color='red') + labs(x="Teacher", y="log2(Scaled Score / Predicted Percentile)") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, PredictedPercentile)) + geom_boxplot() + geom_hline(yintercept=50, color='red') + labs(x="Teacher", y="log2(Scaled Score / Predicted Percentile)") + ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, PredictedPercentile)) + geom_hist() + geom_hline(yintercept=50, color='red') + labs(x="Teacher", y="log2(Scaled Score / Predicted Percentile)") + ggtitle("Distrubtions on NCFE Fall 1014")
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName)
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName) + geom_smooth(method="lm")
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se =F)
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName) + geom_smooth()
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName) + geom_smooth(se=F)
qplot(ConvertedScore, PredictedPercentile, data=ncfe, color=TeacherName)
qplot(ConvertedScore, PredictedPercentile, data=ncfe) + geom_smooth()
qplot(ConvertedScore, PredictedPercentile, data=ncfe) + geom_smooth(method="lm")
qplot(ConvertedScore, PredictedPercentile, data=ncfe) + geom_smooth()
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth() + geom_hline(yintercept=70)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth() + geom_hline(yintercept=70)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se=F) + geom_hline(yintercept=70)
qplot(ConvertedScore, data=ncfe, color=TeacherName)
qplot(ConvertedScore, data=ncfe, fill=TeacherName)
qplot(ConvertedScore, data=ncfe, fill=TeacherName, binwidth=9)
?qplot
qplot(ConvertedScore, data=ncfe, binwidth=9, facets=TeacherName)
qplot(ConvertedScore, data=ncfe, binwidth=9, facets=TeacherName~.)
qplot(ConvertedScore, data=ncfe, binwidth=5, facets=TeacherName~.)
qplot(ConvertedScore, data=ncfe, binwidth=3, facets=TeacherName~.)
qplot(ConvertedScore, data=ncfe, binwidth=6, facets=TeacherName~.)
qplot(ConvertedScore, data=ncfe, binwidth=6, facets=TeacherName~.) + geom_vline(xintercept=70)
qplot(ConvertedScore, data=ncfe, binwidth=6, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=7, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=5, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=3, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=4, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=5, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=6, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(ConvertedScore, data=ncfe, binwidth=5, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(log2(normed), data=ncfe, binwidth=5, facets=TeacherName~.) + geom_vline(xintercept=70, color="red")
qplot(log2(normed), data=ncfe, binwidth=5, facets=TeacherName~.) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), data=ncfe, binwidth=1, facets=TeacherName~.) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), data=ncfe, facets=TeacherName~.) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), data=ncfe, geom="boxplot", facets=TeacherName~.) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), log2(normed), data=ncfe, geom="boxplot", facets=TeacherName~.) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), log2(normed), data=ncfe, geom="boxplot", facets=.~TeacherName) + geom_vline(xintercept=00, color="red")
qplot(log2(normed), log2(normed), data=ncfe, geom="boxplot", facets=.~TeacherName) + geom_hline(yintercept=0, color="red")
qplot(ConvertedScore, GPA, data=ncfe)
ncfe$GPA > 4
filter(ncfe, GPA > 4)
filter(ncfe, GPA > 4)$GPA
filter(ncfe, GPA > 4)$GPA <- 2.875
ncfe$GPA
ncfe$GPA[70]
ncfe$GPA[71]
ncfe$GPA[71] <- 2.875
ncfe$GPA[71]
qplot(ConvertedScore, GPA, data=ncfe)
qplot(ConvertedScore, GPA, data=ncfe, color=TeacherName)
qplot(ConvertedScore, GPA, data=ncfe, color=TeacherName) + geom_smooth()
qplot(ConvertedScore, GPA, data=ncfe, color=TeacherName) + geom_smooth(method="lm")
qplot(ConvertedScore, GPA, data=ncfe) + geom_smooth(method="lm")
lm(ncfe$ConvertedScore ~ ncfe$GPA)
qplot(GPA, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
qplot(GPA, ConvertedScore, data=ncfe) + geom_smooth()
qplot(GPA, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile > =25, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile >=25, ConvertedScore, data=ncfe) + geom_smooth()
qplot(filter(PredictedPercentile >= 25), ConvertedScore, data=ncfe) + geom_smooth()
qplot(filter(ncfe, PredictedPercentile >= 25), ConvertedScore, data=ncfe) + geom_smooth()
x <- filter(ncfe, PredictedPercentile) %>% select(PredictedPercentile)
x <- filter(ncfe, PredictedPercentile >= 25) %>% select(PredictedPercentile)
y <- filter(ncfe, PredictedPercentile >= 25) %>% select(ConvertedScore)
qplot(x, y)
plot(x, y)
?plot
x
y
plot(x, y)
class(x)
class(y)
plot(x[1], y[1])
x <- as.numeric(filter(ncfe, PredictedPercentile >= 25) %>% select(PredictedPercentile))
x[1]
class(x[1])
class(x[[1]])
qplot(x[[1]], y[[1]])
qplot(x[[1]], y[[1]]) + geom_smooth(method="lm")
View(math)
names(fall)
qplot(Percentile, ConvertedScore, data=fall)
qplot(Percentile, ConvertedScore, data=fall, color=AchievementLevel)
qplot(ScaleScore, ConvertedScore, data=fall, color=AchievementLevel)
qplot(LexileQuantile, ConvertedScore, data=fall, color=AchievementLevel)
qplot(LexileQuantile, ConvertedScore, data=fall, color=AchievementLevel) + geom_smooth
qplot(LexileQuantile, ConvertedScore, data=fall, color=AchievementLevel) + geom_smooth()
qplot(ScaleScore, ConvertedScore, data=fall, color=AchievementLevel) + geom_smooth()
qplot(Percentile, ConvertedScore, data=fall, color=AchievementLevel) + geom_smooth()
qplot(Percentile, ConvertedScore, data=fall, color=AchievementLevel) + geom_smooth(method="lm")
names(math)
names(fall)
qplot(LexileQuantile, ConvertedScore, data=fall, color=GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel)) + geom_smooth(method="lm")
names(ncfe)
qplot(Gradelevel, PredictedPercentile, data=ncfe)
qplot(GradeLevel, PredictedPercentile, data=ncfe)
qplot(GradeLevel, PredictedPercentile, data=ncfe, geom="boxplot")
qplot(GradeLevel, PredictedPercentile, data=ncfe, geom="boxplot", facet=~.GradeLevel)
ggplot(ncfe, GradeLevel, PredictedPercentile) + geom_boxplot()
ggplot(ncfe, aes(GradeLevel, PredictedPercentile)) + geom_boxplot()
ggplot(ncfe, aes(TeacherName, ConvertedScore)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, difference)) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, ConvertedScore)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
names(ncfe)
ncfe$TeacherName
filter(ncfe, TeacherName=="Friedman, Edward")
filter(ncfe, TeacherName=="Friedman, Edward") %>% select(Period)
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName
)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(se=F)
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth(se=F)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se=F)
filter(ncfe, TeacherName="Grube, Jeremy") %>% select(StudentLastName, ConvertedScore)
ncfe$TeacherName
names(NCFE)
names(ncfe)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, ConvertedScore)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, , PredictedPercentile, ConvertedScore)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, PredictedPercentile, ConvertedScore)
qplot(GPA, ConvertedScore, data=ncfe, color=TeacherName)
qplot(GPA, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se=F)
qplot(GPA, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
dat <- read.csv("HEATHER.csv")
dat <- read.csv("ncfe13-14.csv")
names(dat)
source('~/.active-rstudio-document')
data$growth <- data$Actual.Scale - data$Predicted.Score
qplot(EOG.Math.8, Actual.Scale, data=data)
qplot(EOG.Math.8, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.1, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.3, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(Predicted.Score, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.3, growth, data=data) + geom_smooth(method="lm")
qplot(EOG.Math.8, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.1, growth, data=data) + geom_smooth(method="lm")
qplot(Predictied.Score, growth, data=data) + geom_smooth(method="lm")
qplot(Predicted.Score, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, growth, data=data) + geom_smooth(method="lm")
qplot(growth, data=data)
qplot(growth, data=data, binsize=5)
qplot(growth, data=data, binwidth=5)
qplot(growth, data=data, binwidth=4)
qplot(growth, data=data, binwidth=3)
qplot(growth, data=data, binwidth=2)
qplot(growth, data=data, binwidth=3)
qplot(growth, data=data, binwidth=4)
qplot(growth, data=data, binwidth=5)
qplot(growth, data=data, binwidth=6)
qplot(growth, data=data, binwidth=7)
qplot(growth, data=data, binwidth=8)
qplot(growth, data=data, binwidth=9)
qplot(growth, data=data, binwidth=6)
summary(data$growth)
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
names(data)
filter(data, Name=="Frierson")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm") + geom_hline(yintercept=335)
filter(data, Actual.Scale < 335)
names(ncfe)
filter(ncfe, ConvertedScore < 70)
filter(ncfe, ConvertedScore < 70) %>% select(GradeLevel)
filter(ncfe, ConvertedScore < 70, GradeLevel == 10)
filter(fall, ConvertedScore < 70, GradeLevel == 10)
filter(ncfe, ConvertedScore < 70, GradeLevel == 10)
ed <- ncfe %>% filter(TeacherName == "Friedman, Edward")
str(ed)
qplot(CourseDescription, ConvertedScore, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed, geom="boxplot")
qplot(CourseDescription, normed, data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ncfe, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ncfe, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ed, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ncfe, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ncfe, geom="boxplot")
ib <- filter(ncfe, CourseDescription=="IB MYP Chemistry")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
str(ib)
ncfe$CourseDescription
ib <- filter(ncfe, CourseDescription=="IB MYP Chemistry")
str(ib)
class(ncfe$CourseDescription)
ib <- filter(ncfe, as.char(CourseDescription=="IB MYP Chemistry"))
ib <- filter(ncfe, as.character(CourseDescription=="IB MYP Chemistry"))
ncfe$CourseDescription
str(ncfe$CourseDescription)
ib <- filter(ncfe, as.character(CourseDescription==3))
ib <- filter(ncfe, CourseDescription==3)
str(ib)
ncfe$CourseDescription[1]
ib <- filter(ncfe, CourseDescription==ncfe$CourseDescription[1])
str(ib)
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
load("~/9th Grade/ws012715.RData")
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
load("~/9th Grade/9th-Grade-Referral-Rates/.RData")
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
library(ggplot2)
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
levels(class_lo$gender) <- c("Female", "Male")
count_loc <- class_lo %>%
group_by(n, location, race, gender) %>%
summarise(count = n())
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
class_lo
count_loc
str(count_loc)
library(dplyr)
library(stringr)
library(grid)
library(tidyr)
libraryr9=(lubridate)
libraryr(lubridate)
library(lubridate)
class_lo <- ref.dem %>%
group_by(sid, location, race, gender) %>%
summarise(n=n()) %>%
filter(location %in% c("Classroom",
"Gym",
"Other location in building"))
class_lo$location <- sub("Other location in building", "Lockout",
class_lo$location)
class_lo$location <- sub("Gym", "Classroom", class_lo$location)
levels(class_lo$gender) <- c("Female", "Male")
count_loc <- class_lo %>%
group_by(n, location, race, gender) %>%
summarise(count = n())
count_loc
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 18)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(2, 16)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(2, 15)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(2, 14)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(2, 13)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(2, 13)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Classroom and Lockout Referrals") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 20)) +
geom_point(col = "steelblue") +
facet_grid(.~location) +
ggtitle("Classroom and Lockout Referrals") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
setwd("~/9th Grade/9th-Grade-Referral-Rates")
class_lo
class_lo %>% filter(location == "Classroom", n > 2)
g2_class <- class_lo %>% filter(location == "Classroom", n > 2)
ref.dem %>% filter(sid %>% g2_class$sid)
ref.dem %>% filter(sid %in% g2_class$sid)
g2_class_dem <- ref.dem %>% filter(sid %in% g2_class$sid)
g2_class_dem %>% select(name_ref)
g2_class_dem %>% select(name_ref) %>% unique()
class_lo %>% filter(location == "Classroom", n > 1)
g2_class_dem %>% select(name_ref) %>% unique()
g2_class_dem %>% select(sid, name_ref) %>% unique()
investigate <- g2_class_dem %>% select(sid, name_ref) %>% unique()
write.table(investigate, file="g2referrals.txt", row.names=F)
?read.table
retained <- read.table("g2referrals.txt", header=T)
retained
g2_class_dem
g2_class_dem <- left_join(g2_class_dem, retained, by="sid")
retained <- read.table("g2referrals.txt", header=T, colClasses = "character")
str(retained)
g2_class_dem <- left_join(g2_class_dem, retained, by="sid")
summary(g2_class_dem)
g2_class_dem <- ref.dem %>% filter(sid %in% g2_class$sid)
g2_class_dem <- left_join(g2_class_dem, retained)
summary(g2_class_dem)
unique(g2_class_dem)
unique(g2_class_dem$location)
g2_class_dem %>% group_by(sid, race, gender, mcv, retained) %>% summary
g2_class_dem %>% group_by(sid, race, gender, mcv, retained) %>% summarise(n = n()) %>% summary()
factor(g2_class_dem$retained)
g2_class_dem$retained <- factor(g2_class_dem$retained)
g2_class_dem %>% group_by(sid, race, gender, mcv, retained) %>% summarise(n = n()) %>% summary()
master %>% group_by(sid) %>% summarise(n=n())
master %>% group_by("sid") %>% summarise(n=n())
master %>% group_by(race) %>% summarise(tally())
master %>% group_by("race") %>% summarise(tally())
72/597
str(master)
eogMatrix <- as.matrix(select(master, EOGRdScore, EOGMaScore, EOGScScore))
str(eogMatrix)
heatmap(eogMatrix)
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore, EOGScScore) %>% filter(!.is.na(EOGRdScore:EOGScScore))
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore, EOGScScore) %>% filter(!is.na(EOGRdScore:EOGScScore))
!is.na(eogMatrix)
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore, EOGScScore) %>% filter(!is.na())
?is.na
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore, EOGScScore) %>% filter(!is.na(EOGRdScore)) %>% filter(!is.na(EOGMaScore)) %>% filter(!is.na(EOGScScore))
is.na(eogMatrix)
heatmap(eogMatrix)
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore, EOGScScore) %>% filter(!is.na(EOGRdScore)) %>% filter(!is.na(EOGMaScore)) %>% filter(!is.na(EOGScScore)) %>% as.matrix()
heatmap(eogMatrix)
hclust(eogMatrix)
hclust(select(master, EOGRdScore, EOGMaScore, EOGScScore))
hclust(select(master, EOGRdScore, EOGMaScore, EOGScScore), na.rm=T)
eogMatrix
?hclust
dist(eogMatrix)
hclust(dist(eogMatrix))
plot(hclust(dist(eogMatrix)))
eogMatrix <- master %>% select(EOGRdScore, EOGMaScore) %>% filter(!is.na(EOGRdScore)) %>% filter(!is.na(EOGMaScore)) %>% as.matrix()
plot(hclust(dist(eogMatrix)))
names(master)
