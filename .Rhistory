names(math)
names(fall)
qplot(LexileQuantile, ConvertedScore, data=fall, color=GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel) + geom_smooth(method="lm")
qplot(LexileQuantile, ConvertedScore, data=fall, color=factor(GradeLevel)) + geom_smooth(method="lm")
names(ncfe)
qplot(Gradelevel, PredictedPercentile, data=ncfe)
qplot(GradeLevel, PredictedPercentile, data=ncfe)
qplot(GradeLevel, PredictedPercentile, data=ncfe, geom="boxplot")
qplot(GradeLevel, PredictedPercentile, data=ncfe, geom="boxplot", facet=~.GradeLevel)
ggplot(ncfe, GradeLevel, PredictedPercentile) + geom_boxplot()
ggplot(ncfe, aes(GradeLevel, PredictedPercentile)) + geom_boxplot()
ggplot(ncfe, aes(TeacherName, ConvertedScore)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, difference)) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, log2(normed))) +
geom_boxplot() +
geom_hline(yintercept=0, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
ggplot(ncfe, aes(TeacherName, ConvertedScore)) +
geom_boxplot() +
geom_hline(yintercept=70, color='red') +
labs(x="Teacher", y="Scaled Score") +
ggtitle("Distrubtions on NCFE Fall 1014")
names(ncfe)
ncfe$TeacherName
filter(ncfe, TeacherName=="Friedman, Edward")
filter(ncfe, TeacherName=="Friedman, Edward") %>% select(Period)
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth()
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName
)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(se=F)
qplot(PredictedPercentile, ConvertedScore, data=ncfe) + geom_smooth(se=F)
qplot(PredictedPercentile, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se=F)
filter(ncfe, TeacherName="Grube, Jeremy") %>% select(StudentLastName, ConvertedScore)
ncfe$TeacherName
names(NCFE)
names(ncfe)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, ConvertedScore)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, , PredictedPercentile, ConvertedScore)
filter(ncfe, TeacherName=="Grube, Jeremy") %>% select(StudentLastName, PredictedPercentile, ConvertedScore)
qplot(GPA, ConvertedScore, data=ncfe, color=TeacherName)
qplot(GPA, ConvertedScore, data=ncfe, color=TeacherName) + geom_smooth(method="lm", se=F)
qplot(GPA, ConvertedScore, data=ncfe) + geom_smooth(method="lm")
dat <- read.csv("HEATHER.csv")
dat <- read.csv("ncfe13-14.csv")
names(dat)
source('~/.active-rstudio-document')
data$growth <- data$Actual.Scale - data$Predicted.Score
qplot(EOG.Math.8, Actual.Scale, data=data)
qplot(EOG.Math.8, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.1, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.3, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(Predicted.Score, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.3, growth, data=data) + geom_smooth(method="lm")
qplot(EOG.Math.8, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.1, growth, data=data) + geom_smooth(method="lm")
qplot(Predictied.Score, growth, data=data) + geom_smooth(method="lm")
qplot(Predicted.Score, growth, data=data) + geom_smooth(method="lm")
qplot(EOC.Math.2, growth, data=data) + geom_smooth(method="lm")
qplot(growth, data=data)
qplot(growth, data=data, binsize=5)
qplot(growth, data=data, binwidth=5)
qplot(growth, data=data, binwidth=4)
qplot(growth, data=data, binwidth=3)
qplot(growth, data=data, binwidth=2)
qplot(growth, data=data, binwidth=3)
qplot(growth, data=data, binwidth=4)
qplot(growth, data=data, binwidth=5)
qplot(growth, data=data, binwidth=6)
qplot(growth, data=data, binwidth=7)
qplot(growth, data=data, binwidth=8)
qplot(growth, data=data, binwidth=9)
qplot(growth, data=data, binwidth=6)
summary(data$growth)
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm")
names(data)
filter(data, Name=="Frierson")
qplot(EOC.Math.2, Actual.Scale, data=data) + geom_smooth(method="lm") + geom_hline(yintercept=335)
filter(data, Actual.Scale < 335)
names(ncfe)
filter(ncfe, ConvertedScore < 70)
filter(ncfe, ConvertedScore < 70) %>% select(GradeLevel)
filter(ncfe, ConvertedScore < 70, GradeLevel == 10)
filter(fall, ConvertedScore < 70, GradeLevel == 10)
filter(ncfe, ConvertedScore < 70, GradeLevel == 10)
ed <- ncfe %>% filter(TeacherName == "Friedman, Edward")
str(ed)
qplot(CourseDescription, ConvertedScore, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed, geom="boxplot")
qplot(CourseDescription, normed, data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ncfe, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ncfe, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ed, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ed, geom="boxplot")
qplot(CourseDescription, ConvertedScore, data=ncfe, geom="boxplot")
qplot(CourseDescription, log2(normed), data=ncfe, geom="boxplot")
ib <- filter(ncfe, CourseDescription=="IB MYP Chemistry")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
str(ib)
ncfe$CourseDescription
ib <- filter(ncfe, CourseDescription=="IB MYP Chemistry")
str(ib)
class(ncfe$CourseDescription)
ib <- filter(ncfe, as.char(CourseDescription=="IB MYP Chemistry"))
ib <- filter(ncfe, as.character(CourseDescription=="IB MYP Chemistry"))
ncfe$CourseDescription
str(ncfe$CourseDescription)
ib <- filter(ncfe, as.character(CourseDescription==3))
ib <- filter(ncfe, CourseDescription==3)
str(ib)
ncfe$CourseDescription[1]
ib <- filter(ncfe, CourseDescription==ncfe$CourseDescription[1])
str(ib)
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
qplot(TeacherName, log2(normed), data=ib, geom="boxplot")
qplot(TeacherName, ConvertedScore, data=ib, geom="boxplot")
source('~/9th Grade/9thGradeSuccess.R', echo=TRUE)
qplot(mcv, percent, data=pct_mcv)
names(master)
qplot(tot_absence - suspensions, num_referrals, data=master)
qplot(tot_absences - suspensions, num_referrals, data=master)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(alpha = 0.1)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(alpha = 0.2)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(alpha = 0.3)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(alpha = 0.2)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(col="blues", alpha = 0.2)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", alpha = 0.2)
?geom_point
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=8, alpha = 0.2)
ggplot(master, aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=6, alpha = 0.2)
ggplot(filter(master, tot_absences < 0), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=6, alpha = 0.2)
ggplot(filter(master, tot_absences - suspensions < 0), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=6, alpha = 0.2)
filter(master, tot_absences < 30)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=6, alpha = 0.2)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth()
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="steelred")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="rush")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="rust")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="dkred")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=4)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=2)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x= Total Absences Not Due to Suspension, y = Number of Referrals)
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals")
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(x.axis.title = element_text(size = 14), y.axis.title = element_text(size = 14), title = element+text(size = 20))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(x.axis.title = element_text(size = 14), y.axis.title = element_text(size = 14), title = element_text(size = 20))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete()
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(1,1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(0,1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.2,1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.1,1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.1,.1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.05,.1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.05,1))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.05,.05))
ggplot(data = filter(master, tot_absences < 30), aes(tot_absences - suspensions, num_referrals)) + geom_point(col="steelblue", size=7, alpha = 0.2) + geom_smooth(method="lm", col="darkred", se=F, lwd=1) + labs(x = "Total Absences Not Due to Suspension", y = "Number of Referrals") + ggtitle("Absences vs Number of Referrals") + theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14), title = element_text(size = 20)) + scale_y_discrete(expand=c(.05,0))
by_race_EOG <- master %>% group_by(EOGRdAch, race, num_referrals)
ggplot(EOGRdAch, num_referrals, data=by_race_EOG)
names(master)
by_race_EOG <- master %>% group_by(EOGRdAch, race, num_referrals) %>% summarise(n = n())
by_race_EOG
ggplot(EOGRdAch, num_referrals, data=by_race_EOG)
qplot(EOGRdAch, num_referrals, data=by_race_EOG)
qplot(EOGRdAch, num_referrals, data=by_race_EOG, facets=.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals)) + geom_point(size=n)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals)) + geom_point(size=n) + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = n)) + geom_point() + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n)) + geom_point() + facet_grid(.~race)
)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point() + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals) + geom_point(col="steelblue", alpha=0.2) + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals)) + geom_point(col="steelblue", alpha=0.2) + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth()
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 2)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1)
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, 0))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, 0.05))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
?theme
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20), legend.title("log10(students)"))
?labs
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20)) + scale_shape_discrete(name=expression("log[10] students"))
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20)) + scale_shape_discrete(name="log10 students")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20)) + scale_color_discrete(name="log10 students")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20)) + scale_fill_discrete(name="log10 students")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20)) + scale_size_discrete(name="log10 students")
ggplot(by_race_EOG, aes(EOGRdAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
percent_refs
pct_mcv
by_race_EOG <- master %>% group_by(EOGMaAch, race, num_referrals) %>% summarise(n = n())
by_race_EOGM <- master %>% group_by(EOGMaAch, race, num_referrals) %>% summarise(n = n())
ggplot(by_race_EOGM, aes(EOGMaAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Reading Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
by_race_EOGM <- master %>% group_by(EOGMaAch, race, num_referrals) %>% summarise(n = n())
ggplot(by_race_EOGM, aes(EOGMaAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Math Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
by_race_EOGS <- master %>% group_by(EOGScAch, race, num_referrals) %>% summarise(n = n())
ggplot(by_race_EOGS, aes(EOGScAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Science Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
ggplot(by_race_EOGM, aes(EOGMaAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~race) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Math Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
by_gender_EOG <- master %>% group_by(EOGMaAch, gender, num_referrals) %>% summarise(n = n())
ggplot(by_gender_EOG, aes(EOGMaAch, num_referrals, size = log10(n))) + geom_point(col="steelblue") + facet_grid(.~gender) + geom_smooth(method="lm", se=F, col = "darkred", lwd = 1) + scale_y_discrete(expand=c(0.05, -1)) + labs(x = "EOG Math Achievement Level", y = "Number of Referrals") + ggtitle("EOG Achievement Correlation to Referrals") + theme(axis.title.x = element_text(size=14), axis.title.y = element_text(size = 14), title = element_text(size=20))
names(refs)
names(master)
head(refs$offense_type)
str(refs$offense_type)
refs$offense_type
str(refs)
refs$incident_title
str(refs)
str(refs$location)
unique(refs$location)
sum(refs$location == "Classroom")
mean(refs$location == "Classroom")
refs %>% group_by(location) %>% summarise(n(), mean())
refs %>% group_by(location) %>% summarise(n(), mean(n))
refs %>% group_by(location) %>% summarise(n=n(), mean(n)
)
refs %>% group_by(location) %>% summarise(n=n()) %>% mutate(mean = n / sum(n))
refs <- tbl_df(refs)
# extract incident ID, incident title, ActionType2
refs <- separate(refs, ï..SourceIncidentID, c("trash1", "incident_id"),
sep="\n")
refs <- separate(refs, IncidentTitle, c("trash2", "incident_title"),
sep="\n")
refs <- separate(refs, ActionType2, c("sid", "name_ref", "outcome"),
sep=" - ")
# strip white space from sid
refs$sid <- str_trim(refs$sid)
refs <- read.csv(file2, stringsAsFactors = FALSE)
setwd("~/9th Grade/9th-Grade-Referral-Rates")
refs <- read.csv(file2, stringsAsFactors = FALSE)
refs <- tbl_df(refs)
# extract incident ID, incident title, ActionType2
refs <- separate(refs, ï..SourceIncidentID, c("trash1", "incident_id"),
sep="\n")
refs <- separate(refs, IncidentTitle, c("trash2", "incident_title"),
sep="\n")
refs <- separate(refs, ActionType2, c("sid", "name_ref", "outcome"),
sep=" - ")
# strip white space from sid
refs$sid <- str_trim(refs$sid)
names(refs)
refs
str(refs)
refs <- refs %>% select(incident_id,
incident_title,
incident_date = Textbox13,
location = Textbox21,
offense_type = OffenseType3,
sid:IncidentDetailDescription3)
ref.dem <- left_join(refs, select(master, sid, race, gender, mcv), by=sid)
ref.dem <- left_join(refs, select(master, sid, race, gender, mcv), by="sid")
by_loc <- ref.dem %>% group_by(race, location), summarise(n = n())
by_loc <- ref.dem %>% group_by(race, location) %>% summarise(n = n())
by_loc
by_loc <- ref.dem %>% group_by(race, location) %>% summarise(n = n()) %>% mutate(pct = n / sum(n))
by_loc
by_loc <- ref.dem %>% group_by(location, race) %>% summarise(n = n()) %>% mutate(pct = n / sum(n))
by_loc
ref.dem <- inner_join(refs, select(master, sid, race, gender, mcv), by="sid")
by_loc <- ref.dem %>% group_by(location, race) %>% summarise(n = n()) %>% mutate(pct = n / sum(n))
by_loc
ggplot(by_loc, aes(location, pct)) + geom_bar(position="dodge") + facet_grid(.~race)
ggplot(by_loc, aes(location, pct)) + geom_bar(stat= "identity", position="dodge") + facet_grid(.~race)
ggplot(by_loc, aes(location, pct)) + geom_bar(stat= "identity") + facet_grid(.~race)
ggplot(by_loc, aes(location, pct)) + geom_bar(stat= "identity")
by_loc
pct.bk <- by_loc %>% gather("race", "percent", 2,4)
pct.bk
ggplot(by_loc, aes(race, pct)) + geom_bar(stat= "identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct)) + geom_bar(stat="identity", col=race) + facet_grid(.~location)
ggplot(by_loc, aes(race, pct, col=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, n, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, n, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, n, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ref.dem
ref.dem %>% group_by(sid, location, race) %>% summarise(n=n())
class_other <- ref.dem %>% group_by(sid, location, race) %>% summarise(n=n()) %>% filter(location == "Classroom" | location == "Other location in building")
class_other
ggplot(class_other, aes(race, n), fill=race) + geom_bar(stat="identity") + facet_grid(.~location)
sum(class_other$n > 1)
mean(class_other$n >1)
mean(class_other$n > 1 $ location=="Classroom")
mean(class_other$n > 1 & location=="Classroom")
mean(class_other$n > 2)
sum(class_other$n > 2)
names(master)
master <- read.csv(file1)
master <- tbl_df(master)
names(master)
by_loc
class_other
qplot(race, n, data=class_other)
ggplot(class_other, aes(race, n)) + geom_point(alpha=0.2)
ggplot(class_other, aes(race, n)) + geom_point(alpha=0.2, size=8)
ggplot(class_other, aes(race, n)) + geom_point(alpha=0.1, size=8)
ggplot(class_other, aes(race, n)) + geom_point(alpha=0.1, size=10)
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.1, size=10)
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.1, size=10) + facet_grid(.~location)
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location)
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expande=c(.1, 0))
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expand=c(.1, 0))
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expand=c(.05, 0))
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expand=c(.05, -1))
filter(refs, sid %in% class_other$sid) %>% select(name)
names(refs)
filter(refs, sid %in% class_other$sid) %>% select(name_ref)
g2 <- filter(class_other, n > 2)
g2
filter(refs, sid %in% g2$sid) %>% select(name_ref)
unique(filter(refs, sid %in% g2$sid) %>% select(name_ref))
investigate <- unique(filter(refs, sid %in% g2$sid) %>% select(name_ref))
print(investigate)
print(investigate, 36)
print(as.data.frame(investigate))
sorted(as.data.frame(investigate)
)
sort(as.data.frame(investigate))
investigate
investigate <- unique(filter(refs, sid %in% g2$sid) %>% select(sid, name_ref, race, gender))
investigate
as.data.frame(investigate)
ggplot(filter(class_other, n < 3), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expand=c(.05, 0))
ggplot(filter(class_other, n > 2), aes(race, n)) + geom_point(alpha=0.2, size=10) + facet_grid(.~location) + scale_y_discrete(expand=c(.05, -1))
ggplot(class_other, aes(race, n), fill=race) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(by_loc, aes(race, n, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
by_loc
class_other
class_other %>% filter(n > 1)
class_other %>% filter(n > 1) %>% group_by(race) %>% summarise(n = n())
class_other %>% filter(n > 1) %>% group_by(race, location) %>% summarise(n = n())
class_other %>% group_by(race, location) %>% summarise(n = n())
class_other_unique <- class_other %>% group_by(race, location) %>% summarise(n = n())
by_loc
class_other
class_other %>% group_by(n, location, classroom) %>% summarise(count = n())
class_other %>% group_by(n, location, race) %>% summarise(count = n())
count_loc <- class_other %>% group_by(n, location, race) %>% summarise(count = n())
ggplot(count_loc, aes(race, n, size = count)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete()
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(2, 20) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete()
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(2, 20)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete()
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(2, 20)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals", legend="students")
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(2, 20)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(2, 24)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(1, 37)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(3, 30)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(3, 24)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
ggplot(count_loc, aes(race, n, size = count)) + scale_size_continuous(range=c(3, 24)) + geom_point(col = "steelblue") + facet_grid(.~location) + ggtitle("Referrals by Race in Classroom and Building") + scale_y_discrete() + labs(y="Number of Referrals") + theme(axis.text.x = element_text(angle = 30, hjust = 1), axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16), title = element_text(size = 20))
class_other_unique
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + facet_grid(.~location)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity", fill="Set2") + facet_grid(.~location)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=NULL)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=NULL, y="Number of Students") + ggtitle("Students with at least One Referral") + theme(axis.text.x = NULL)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=NULL, y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=NONE)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=NULL, y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=none)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=NULL, y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=NULL)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x=Race, y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=NULL)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=NULL)
ggplot(class_other_unique, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Number of Students") + ggtitle("Students with at least One Referral") + scale_x_discrete(labels=NULL) + theme(axis.title.y = element_text(size=16), axis.title.x = element_text(size=16), title = element_text(size=20))
ggplot(by_loc, aes(race, pct, fill=race)) +
geom_bar(stat="identity") +
facet_grid(.~location)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle(Percent of Referrals by Location and Race) + scale_x_discrete(labels=F)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle("Percent of Referrals by Location and Race") + scale_x_discrete(labels=F)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle("Percent of Referrals by Location and Race") + scale_x_discrete(labels=NULL)
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle("Percent of Referrals by Location and Race") + scale_x_discrete(labels=NULL) + theme(axis.title.y = element_text(size=16), axis.title.x = element_text(size=16), title = element_text(size=20))
ggplot(by_loc, aes(race, pct, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle("Percent of Referrals by Location and Race") + scale_x_discrete(labels=NULL) + theme(axis.title.y = element_text(size=16), axis.title.x = element_text(size=16), title = element_text(size=20))
ggplot(by_loc, aes(race, pct * 100, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Percent") + ggtitle("Percent of Referrals by Location and Race") + scale_x_discrete(labels=NULL) + theme(axis.title.y = element_text(size=16), axis.title.x = element_text(size=16), title = element_text(size=20))
ggplot(by_loc, aes(race, n, fill=race)) + geom_bar(stat="identity") + scale_fill_brewer(palette = "Set2") + facet_grid(.~location) + labs(x="Race", y="Number of Referrals") + ggtitle("Number of Referrals by Location and Race") + scale_x_discrete(labels=NULL) + theme(axis.title.y = element_text(size=16), axis.title.x = element_text(size=16), title = element_text(size=20))
investigate
investigate <- unique(filter(refs, sid %in% g2$sid) %>% select(sid, name_ref, race, gender))
investigate <- unique(filter(refs.dem, sid %in% g2$sid) %>% select(sid, name_ref, race, gender))
investigate <- unique(filter(ref.dem, sid %in% g2$sid) %>% select(sid, name_ref, race, gender))
investigate
investigate <- unique(filter(ref.dem, sid %in% g2$sid)
)
investigate <- unique(filter(ref.dem, sid %in% g2$sid))
investigate
unique(investigate$incident_date)
investigate %>% group_by(date) %>% summarise(n = n())
investigate %>% group_by(incident_date) %>% summarise(n = n())
investigate$incident_date <- mdy(investigate$incident_date)
ggplot(summarise(group_by(investigate, incident_date), n = n(), aes(date, n))) + geom_line()
ggplot(summarise(investigate, group_by(incident_date), n = n(), aes(date, n))) + geom_line()
inv.date <- investigate %>% group_by(incident_date) %>% summarise(n = n())
ggplot(inv.date, aes(date, n)) + geom_line()
ggplot(inv.date, aes(date, n)) + geom_point()
inv.date
ggplot(inv.date, aes(incident_date, n)) + geom_line()
ggplot(inv.date, aes(incident_date, n)) + geom_point()
ggplot(inv.date, aes(incident_date, n)) + geom_smooth()
ref.dem
ref.dem$incident_date <- mdy(ref.dem$incident_date)
ref.date <- ref.dem %>% group_by(incident_date) %>% summarise(n = n())
ggplot(ref.date, aes(incident_date, n)) + geom_line()
ggplot(ref.date, aes(incident_date, n)) + geom_line() + geom_smooth()
ref.date %>% filter(incident_date > 2014-12-01)
ref.date %>% filter(incident_date > 2014-12-10)
ggplot(ref.date, aes(incident_date, n)) + geom_point() + geom_smooth()
summary(ref.date)
names(ref.dem)
ref.dem %>% filter(location == "Other location in buildingt") %>% select(ref_name, race, , outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Other location in buildingt") %>% select(name_ref, race, , outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Other location in buildingt") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Other location in building") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "School grounds") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Gym") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Hallway") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
ref.dem %>% filter(location == "Classroom") %>% select(name_ref, race, outcome, IncidentDetailDescription3) %>% View()
str(ref.dem)
str(ref.dem$location)
class_lo <- ref.dem %>% group_by(sid, location, race, gender) %>% summarise(n=n()) %>% filter(location %in% c("Classroom", "Gym", "Hallway", "Other location in building"))
str(class_lo$location)
unique(class_lo$location)
?sub
class_lo <- sub("Lockout", "Other location in building", class_lo$location)
unique(class_lo$location)
class_lo$location
class_lo
class_lo <- ref.dem %>% group_by(sid, location, race, gender) %>% summarise(n=n()) %>% filter(location %in% c("Classroom", "Gym", "Hallway", "Other location in building"))
class_lo$location <- sub("Lockout", "Other location in building", class_lo$location)
unique(class_lo$location)
class_lo$location <- sub(Other location in building", "Lockout", class_lo$location)
class_lo$location <- sub("Other location in building", "Lockout", class_lo$location)
unique(class_lo$location)
class_lo$location <- sub("Gym", "Classroom", class_lo$location)
class_lo <- ref.dem %>% group_by(sid, location, race, gender) %>% summarise(n=n()) %>% filter(location %in% c("Classroom", "Gym", "Other location in building"))
class_lo$location <- sub("Other location in building", "Lockout", class_lo$location)
class_lo$location <- sub("Gym", "Classroom", class_lo$location)
unique(class_lo$location)
class_lo_uniqu <- class_lo %>% group_by(race, gender, location) %>% summarise(n=n())
class_lo_unique <- class_lo %>% group_by(race, gender, location) %>% summarise(n=n())
ggplot(class_lo_unique, aes(race, n, fill=race)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set2") +
facet_grid(gender~location) +
labs(x="Race", y="Number of Students") +
ggtitle("Students with at least One Referral") +
scale_x_discrete(labels=NULL) +
theme(axis.title.y = element_text(size=16),
axis.title.x = element_text(size=16),
title = element_text(size=20))
str(class_lo_unique$gender)
levels(class_lo_unique$gender) <- c("Female", "Male")
ggplot(class_lo_unique, aes(race, n, fill=race)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set2") +
facet_grid(gender~location) +
labs(x="Race", y="Number of Students") +
ggtitle("Students with at least One Referral") +
scale_x_discrete(labels=NULL) +
theme(axis.title.y = element_text(size=16),
axis.title.x = element_text(size=16),
title = element_text(size=20))
install.packages("knitr")
count_loc <- class_lo %>% group_by(n, location, race, gender) %>% summarise(count = n())
ggplot(count_loc, aes(race, n, size = count)) +
scale_size_continuous(range=c(3, 24)) +
geom_point(col = "steelblue") +
facet_grid(gender~location) +
ggtitle("Referrals by Race in Classroom and Building") +
scale_y_discrete() + labs(y="Number of Referrals") +
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
title = element_text(size = 20))
save.image("~/9th Grade/ws012715.RData")
